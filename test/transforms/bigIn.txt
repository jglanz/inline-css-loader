'use strict';
exports.default = {
  '.popupWrapper': {
    '.green': {
      color: _theme2.default.green
    },
    '.red': {
      color: _theme2.default.red
    },
    '.listRow': babelHelpers.extends({}, _theme2.default.mixins.flex.row, {
      position: 'relative',
      '> .inputContainer > div > div > input': {
        lineHeight: '40px !important'
      },
      '> .openChild': {
        position: 'absolute',
        right: 0
      },
      '.inputContainer, .inputContainer > :not(.toggableInput)': babelHelpers.extends({}, _theme2.default.mixins.flex.fullRow),
      input: babelHelpers.extends({}, _theme2.default.mixins.flex.full, {
        border: 'none',
        borderBottom: `1px solid ${ _theme2.default.grey } !important`,
        paddingLeft: 15
      })
    }),
    '.Select-value': {
      pointerEvents: 'none'
    },
    '.inputIcon': {
      borderBottom: `1px solid ${ _theme2.default.grey }`,
      borderRight: `1px solid ${ _theme2.default.grey }`,
      flexShrink: 0,
      lineHeight: '40px',
      textAlign: 'center',
      width: 80,
      '&.descriptionIcon': {
        borderRight: 'none'
      },
      '&.informationIcon.empty, &.documentIcon.empty': {
        borderBottom: `1px solid ${ _theme2.default.grey }`
      },
      '&.informationIcon.hasContent, &.documentIcon.hasContent': {
        borderBottom: 'none'
      }
    },
    '.dateSelect': {
      '.dateRangeButton': {
        backgroundColor: _theme2.default.blue,
        borderRadius: 5,
        color: _theme2.default.white,
        margin: '0 5px',
        padding: '5px 10px',
        textAlign: 'center',
        width: '50%',
        '&:hover': {
          backgroundColor: (0, _color2.default)(_theme2.default.blue).lighten(0.05).rgbString()
        }
      },
      '.dateInput': babelHelpers.extends({}, _theme2.default.mixins.flex.full, {
        border: 'none'
      }),
      '.rangeButtonRow': {
        padding: '5px 30px',
        '&:first-child': {
          paddingTop: 10
        }
      },
      '.startEndDate .inputIcon': {
        border: 'none'
      }
    },
    '.textarea.toggableInput': {
      '> :last-child': {
        marginBottom: 10
      },
      '> *': {
        marginBottom: 0,
        marginTop: 10,
        lineHeight: 1.5
      },
      ul: {
        paddingLeft: 15
      }
    },
    '.textarea-container textarea': {
      border: 'none !important'
    },
    '.notesContainer': {
      '.notesEdit': babelHelpers.extends({}, _theme2.default.mixins.flex.fullRow, {
        borderBottom: `1px solid ${ _theme2.default.grey }`,
        '.addNote': {
          bottom: 10,
          color: _theme2.default.blue,
          position: 'absolute',
          right: 10
        },
        '.toggableInput': babelHelpers.extends({}, _theme2.default.mixins.flex.full, {
          lineHeight: '40px'
        }),
        'textarea-container': {
          border: 'none',
          borderRadius: 0,
          margin: 0,
          padding: '10px 10px 0 15px'
        },
        '> :not(.toggableInput)': babelHelpers.extends({}, _theme2.default.mixins.flex.fullRow, {
          paddingLeft: 15
        })
      }),
      '.listSelect': {
        '.singleNote': {
          maxHeight: 115,
          overflowX: 'hidden',
          overflowY: 'scroll',
          '&::-webkit-scrollbar': {
            display: 'none'
          },
          '.singleNoteContent': babelHelpers.extends({}, _theme2.default.mixins.flex.row, {
            justifyContent: 'space-between',
            paddingRight: 15,
            '.textarea-container': {
              border: 'none',
              margin: 0,
              padding: 0
            }
          }),
          '&.active': {
            maxHeight: '100%',
            '.singleNoteContent': {
              paddingLeft: 15,
              paddingBottom: 0
            },
            '.noteMetaData': {
              display: 'none'
            }
          }
        }
      },
      '.singleNote': {
        borderBottom: `1px solid ${ _theme2.default.grey }`,
        '.singleNoteContent': {
          borderLeft: `1px solid ${ _theme2.default.grey }`,
          marginLeft: 79,
          padding: '10px 40px 10px 15px',
          lineHeight: 1.5,
          '.noteMetaData': babelHelpers.extends({}, _theme2.default.mixins.flex.row, {
            alignContent: 'flex-end',
            color: _theme2.default.grey,
            fontSize: _theme2.default.fontSmall,
            justifyContent: 'flex-end',
            marginTop: 4
          }),
          '.toggableInput > :last-child': {
            marginBottom: 0
          },
          '.toggableInput > :first-child': {
            marginTop: 0
          }
        }
      }
    },
    '.documentContainer': {
      '.toggableInput': babelHelpers.extends({}, _theme2.default.mixins.flex.full, {
        borderBottom: `1px solid ${ _theme2.default.grey }`,
        lineHeight: '40px',
        paddingLeft: 15
      }),
      '.uploadSuccess, .uploadError': {
        borderBottom: `1px solid ${ _theme2.default.grey }`,
        paddingRight: 40,
        paddingTop: 13
      },
      '.uploadSuccess': {
        color: _theme2.default.success
      },
      '.uploadError': {
        color: _theme2.default.error
      },
      '.documentList': babelHelpers.extends({}, _theme2.default.mixins.flex.row, {
        justifyContent: 'space-between',
        borderLeft: `1px solid ${ _theme2.default.grey }`,
        marginLeft: 79,
        padding: '12px 15px 3px 15px',
        '.downloadFile': babelHelpers.extends({}, _theme2.default.mixins.flex.fullRow, {
          justifyContent: 'space-between',
          marginBottom: 10,
          '.startDownload': {
            cursor: 'pointer',
            marginRight: 10
          }
        })
      })
    }
  }
};
